{"version":3,"sources":["components/navigation-bar.jsx","components/main-page/existing-note-slot.jsx","pages/MainPage.jsx","pages/DetalView.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","class","size","ExistingNoteSlot","data","title","id","value","date","to","onClick","console","log","className","MainPage","useState","noteTitle","setNoteTitle","noteValue","setNoteValue","noteObject","setNoteObject","arrayOfNotes","setArrayOfNotes","useEffect","prevList","localStorage","setItem","JSON","stringify","placeholder","type","onChange","e","target","Date","S4","Math","random","toString","substring","idGenerator","getFullYear","getMonth","getDate","length","map","item","DetalView","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAIaA,EAAgB,WACzB,OACI,sBAAKC,MAAM,eAAX,UACI,cAAC,IAAD,CAAWC,KAAM,KACjB,gCACI,cAAC,IAAD,CAAgBA,KAAM,KACtB,mD,gDCFHC,G,MAAmB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnBC,GAAsBD,EAA1BE,GAA0BF,EAAtBC,OAAOE,EAAeH,EAAfG,MAAOC,EAAQJ,EAARI,KAEzB,OACQ,cAAC,IAAD,CAAMC,GAAG,cAAcC,QAAS,WAAKC,QAAQC,IAAIP,IAAjD,SACI,0BAASQ,UAAU,OAAnB,UACI,6BAAKR,IACL,4BAAIE,IACJ,6BAAKC,IACL,gCACI,cAAC,IAAD,CAAWN,KARd,KASG,cAAC,IAAD,CAAYA,KATf,KAUG,cAAC,IAAD,CAAaA,KAVhB,eCLRY,EAAW,WAEpB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAuCA,OATAC,qBAAU,WACFJ,GACAG,GAAgB,SAACE,GAAD,OAAaL,GAAb,mBAA4BK,OAC5CC,aAAaC,QAAQP,EAAWd,GAAIsB,KAAKC,UAAUT,KAEnDT,QAAQC,IAAI,iBAElB,CAACQ,IAGC,0BAASP,UAAU,iBAAnB,UACI,yBAASA,UAAU,gBAAnB,SACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,QAAd,6BACA,gCACI,uBAAOiB,YAAY,QAAQC,KAAK,OAAOC,SA3C1C,SAACC,GAEdhB,EAAagB,EAAEC,OAAO3B,UA0CN,0BAAUuB,YAAY,YAAYC,KAAK,OAAOC,SAvCjD,SAACC,GAEVd,EAAac,EAAEC,OAAO3B,UAsCV,wBAAQwB,KAAK,SAASrB,QA5BtB,WAChB,IAAMF,EAAO,IAAI2B,KACX7B,EATV,WACI,IAAI8B,EAAK,WACN,OAA2B,IAAjB,EAAEC,KAAKC,UAAgB,GAAGC,SAAS,IAAIC,UAAU,IAE9D,OAAQJ,IAAKA,IAAK,IAAIA,IAAK,IAAIA,IAAK,IAAIA,IAAK,IAAIA,IAAKA,IAAKA,IAKhDK,GACXpB,EAAc,CACVf,GAAGA,EACHD,MAAMW,EACNT,MAAMW,EACNV,KAAKA,EAAKkC,cAAc,KAAKlC,EAAKmC,WAAW,GAAG,IAAInC,EAAKoC,aAqB7C,4BAIZ,yBAAS/B,UAAU,0BAAnB,SACKS,EAAauB,OACVvB,EAAawB,KAAI,SAACC,GACd,OAAO,cAAC,EAAD,CAAkB3C,KAAM2C,OAEpC,uDCnENC,EAAY,WACrB,OAAQ,kCACI,wC,aC8BDC,MApBf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eCZGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61210699.chunk.js","sourcesContent":["import \"../styles/css/navigation-bar.css\"\nimport { BsFillGearFill } from \"react-icons/bs\";\nimport { BiNotepad } from \"react-icons/bi\";\n\nexport const NavigationBar = () => {\n    return (\n        <nav class=\"navContainer\">\n            <BiNotepad size={64}/>\n            <div>\n                <BsFillGearFill size={32}/>\n                <span>Settings</span>\n            </div>\n        </nav>\n    )\n}","import {\n    Link\n  } from \"react-router-dom\";\n\n  import { FiClipboard } from \"react-icons/fi\";\n  import {FaTwitter, FaFacebook } from \"react-icons/fa\";\n  import \"../../styles/css/existing-note-slot.css\"\n\nexport const ExistingNoteSlot = ({data}) => {\n    const {id, title, value, date} = data\n    const iconSize = 32\n    return (\n            <Link to=\"/detal-view\" onClick={()=>{console.log(title)}}>\n                <section className=\"slot\">\n                    <h3>{title}</h3>\n                    <p>{value}</p>\n                    <h6>{date}</h6>\n                    <div>\n                        <FaTwitter size={iconSize}/>\n                        <FaFacebook size={iconSize}/>\n                        <FiClipboard size={iconSize}/>\n                    </div>\n                </section>\n            </Link>\n    )\n}","// import {CreateNewNoteField} from \"../components/main-page/create-new-note-field\"\nimport \"../styles/css/main-page.css\"\nimport { useEffect, useState } from \"react\"\nimport {ExistingNoteSlot} from \"../components/main-page/existing-note-slot\"\n\nexport const MainPage = () => {\n\n    const [noteTitle, setNoteTitle] = useState(\"\")\n    const [noteValue, setNoteValue] = useState(\"\")\n\n    const [noteObject, setNoteObject] = useState(null)\n    const [arrayOfNotes, setArrayOfNotes] = useState([])\n\n    const setTitle = (e) => {\n        // console.log(e.target.value);\n        setNoteTitle(e.target.value)\n}\n\n    const setValue = (e) => {\n            // console.log(e.target.value);\n            setNoteValue(e.target.value)\n    }\n\n    function idGenerator() {\n        var S4 = function() {\n           return (((1+Math.random())*0x10)|0).toString(16).substring(1);\n        };\n        return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n    }\n\n    const submitValue = () => {\n        const date = new Date()\n        const id = idGenerator()\n        setNoteObject({\n            id:id,\n            title:noteTitle,\n            value:noteValue,\n            date:date.getFullYear()+'/'+(date.getMonth()+1)+'/'+date.getDate()\n        })\n    }\n\n    useEffect(()=>{\n        if (noteObject) {\n            setArrayOfNotes((prevList)=>[noteObject, ...prevList])\n            localStorage.setItem(noteObject.id, JSON.stringify(noteObject));\n        }else{\n            console.log(\"did nothing\");\n        }\n    },[noteObject])\n\n    return (\n        <section className=\"main-Container\">\n            <section className=\"input-Section\">\n                <div className=\"input-Container\">\n                    <h1 className=\"title\">Create New Note</h1>\n                    <div>\n                        <input placeholder=\"Title\" type=\"text\" onChange={setTitle}/>\n                        <textarea placeholder=\"Your Text\" type=\"text\" onChange={setValue}/>\n                        <button type=\"submit\" onClick={submitValue}>Submit</button>\n                    </div>\n                </div>\n            </section>\n            <section className=\"existing-Note-Container\">\n                {arrayOfNotes.length ? (\n                    arrayOfNotes.map((item)=>{\n                        return <ExistingNoteSlot data={item}/>\n                    })\n                ) :<h1>Sorry, no notes</h1>}\n            </section>\n        </section>\n    )\n}","export const DetalView = () => {\n    return (<section>\n                <h1>pop</h1>\n            </section>)\n}","import React from \"react\";\nimport {NavigationBar} from \"./components/navigation-bar\"\nimport {MainPage} from \"./pages/MainPage\"\nimport {DetalView} from \"./pages/DetalView\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport \"../src/styles/css/index.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavigationBar/>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/detal-view\">\n            <DetalView />\n          </Route>\n          <Route path=\"/\">\n            <MainPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}